fullnameOverride: kontroller-dashboard

replicaCount: 1

profile: default

common:
  authUrl: "https://scarif-kspm.auth.ap-northeast-2.amazoncognito.com/oauth2/token"

image:
  repository: ghcr.io/opsnowsecurity/scarif-kontroller-dashboard
  tag: latest
  pullPolicy: Always

labels: {}
annotations: {}

pod:
  labels: {}
  annotations: {}

pdb: {}

service:
  type: ClusterIP
  externalPort: 3000
  internalPort: 3000
  annotations: {}
  labels: {}

ingress:
  enabled: false
  subdomain: kontroller-dashboard
  basedomain: ""  # 사용자 입력값
  hosts: {}
  annotations:
    kubernetes.io/ingress.class: nginx
  #  nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  #  nginx.ingress.kubernetes.io/whitelist-source-range: 58.151.93.2/32,58.151.93.9/32,14.177.235.12/32
  labels: {}

kontrollerDashboard:
  url: http://kontroller-dashboard.svc.cluster.local/

autoscaling:
  enabled: true
  min: 1
  max: 5
  cpu: 80
  mem: 80

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 120m
    memory: 153Mi

readinessProbe:
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 15

livenessProbe:
  httpGet:
    path: /
    port: 3000
  initialDelaySeconds: 60
  periodSeconds: 30
  failureThreshold: 15


health:
  enabled: true


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Image pull secrets that are attached to the ServiceAccount
  imagePullSecrets: []
  # Automount API credentials for the Service Account
  automountServiceAccountToken: true
  rbac:
    create: true


# load envFrom
secret:
  enabled: false
  data: {}
  # SECRET: "c2VjcmV0IHdvcmxkCg=="


rbac:
  create: true
  clusterRole:
    extraRules: []
  role:
    extraRules: []




# livenessProbe:
#   exec:
#     command:
#     - cat
#     - /tmp/healthy
#   initialDelaySeconds: 3
#   periodSeconds: 10
# livenessProbe:
#   tcpSocket:
#     port: 80
#   initialDelaySeconds: 3
#   periodSeconds: 10

# hostNetwork: true
# dnsPolicy: Default

nodeSelector: {}

tolerations: []

affinity: {}

env: []





